# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Testing Yari

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2.3.4

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.3.0
        with:
          node-version: "12"

      - name: Cache node_modules
        uses: actions/cache@v2.1.6
        id: cached-node_modules
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}-${{ hashFiles('.github/workflows/testing.yml') }}

      - name: Debug something
        run: |
          ls -l /usr/bin | grep -i chrom

      - name: Install all yarn packages
        if: steps.cached-node_modules.outputs.cache-hit != 'true'
        # env:
        #   # # XXX rewrite for playwright
        #   # PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: 1
        #   PLAYWRIGHT_BROWSERS_PATH: /usr/bin
        #   # PLAYWRIGHT_BROWSERS_PATH: $HOME/pw-browsers
        run: |
          yarn --frozen-lockfile

      - name: Lint prettier
        run: yarn prettier-check

      - name: Lint ESLint
        run: yarn eslint

      - name: Unit testing client
        run: yarn test:client

      - name: Build and start server
        env:
          ENV_FILE: testing/.env
        run: |
          yarn prepare-build
          yarn build

          yarn start:static-server > /tmp/stdout.log 2> /tmp/stderr.log &
          sleep 1
          curl --retry-connrefused --retry 5 http://localhost:5000 > /dev/null

      - name: Debug server's stdout and stderr if tests failed
        if: failure()
        run: |
          echo "STDOUT..................................................."
          cat /tmp/stdout.log
          echo ""
          echo "STDERR..................................................."
          cat /tmp/stderr.log

      - name: Functional testing
        env:
          # # XXX rewrite for playwright
          # PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: 1
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
          # PLAYWRIGHT_BROWSERS_PATH: /usr/bin
        run: |
          yarn test:testing
          yarn test:headless

          # ./testing/scripts/functional-test.sh --runInBand
