name: NPM Publish

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  build:
    if: github.repository == 'mdn/yari'
    runs-on: ubuntu-latest

    steps:
      - name: Release
        uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: node
          package-name: release-please-action

      - name: Checkout
        uses: actions/checkout@v3
        if: steps.release.outputs.release_created

      - name: Setup
        uses: actions/setup-node@v3
        if: steps.release.outputs.release_created
        with:
          node-version: 18
          cache: yarn

      - name: Install
        if: steps.release.outputs.release_created
        run: yarn --frozen-lockfile

      - name: Build
        if: steps.release.outputs.release_created
        env:
          # What this does is it makes sure the built client is made for
          # doing CRUD work (e.g. previewing, toolbar, flaws UI, etc)
          REACT_APP_CRUD_MODE: true

          # This makes sure the auth is disabled. I.e. the "Sign in" link
          # in the header. It also disables any XHR checks to the server's
          # whoami endpoint.
          REACT_APP_DISABLE_AUTH: true

          # The 'yarn build:prepare' command is going to try to build up a
          # file for the git history so it can have an index of each files.
          # This makes sense in most of the cases where you have a CONTENT_ROOT
          # which you'll want to build. But the CONTENT_ROOT can't be empty
          # so you have to set it to something. So let's (ab)use the content
          # we use for the end-to-end testing.
          CONTENT_ROOT: testing/content/files
        run: yarn build:prepare

      - name: Publish
        if: steps.release.outputs.release_created
        run: npm publish --access public
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
