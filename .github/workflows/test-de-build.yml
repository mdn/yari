name: Test-DE Build

env:
  DEFAULT_NOTES: ""

on:
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron: "0 */24 * * *"

  workflow_dispatch:
    inputs:
      notes:
        description: "Notes"
        required: false
        default: ${DEFAULT_NOTES}

      invalidate:
        description: "Invalidate CDN (use only in exceptional circumstances)"
        type: boolean
        required: false
        default: false

  workflow_call:
    secrets:
      GCP_PROJECT_NAME:
        required: true
      WIP_PROJECT_ID:
        required: true

permissions:
  contents: read
  id-token: write

jobs:
  trigger:
    runs-on: ubuntu-latest

    # When run from `main` branch (schedule or manual), trigger workflow on `test-de` branch instead.
    if: ${{ github.repository == 'mdn/yari' && github.ref_name == 'main'  }}
    steps:
      - run: gh workflow run "${{ github.workflow }}" --repo "${{ github.repository }}" --ref "test-de"
        env:
          GH_TOKEN: ${{ secrets.AUTOMERGE_TOKEN }}

  build:
    environment: test-de
    runs-on: ubuntu-latest

    # Only run the scheduled workflows on the main repo.
    if: github.repository == 'mdn/yari' && github.ref_name == 'test-de'

    steps:
      - name: Checkout (yari)
        uses: actions/checkout@v4

      - name: Setup Node.js
        if: ${{ ! vars.SKIP_BUILD || ! vars.SKIP_FUNCTION }}
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: yarn

      - name: Print notes
        if: github.event.inputs.notes
        run: |
          echo "notes: ${{ github.event.inputs.notes }}"

      - name: Print CPU info
        run: cat /proc/cpuinfo

      - name: Auth (Cloud Function)
        if: ${{ ! vars.SKIP_FUNCTION }}
        uses: google-github-actions/auth@v2
        with:
          token_format: access_token
          service_account: deploy-test-de-nonprod-mdn-ing@${{ secrets.GCP_PROJECT_NAME }}.iam.gserviceaccount.com
          workload_identity_provider: projects/${{ secrets.WIP_PROJECT_ID }}/locations/global/workloadIdentityPools/github-actions/providers/github-actions

      - name: Setup gcloud
        if: ${{ ! vars.SKIP_FUNCTION }}
        uses: google-github-actions/setup-gcloud@v2
        with:
          install_components: "beta"

      - name: Generate redirects map
        if: ${{ ! vars.SKIP_FUNCTION }}
        working-directory: cloud-function
        env:
          CONTENT_ROOT: ${{ github.workspace }}/testing/content/files
          CONTENT_TRANSLATED_ROOT: ${{ github.workspace }}/testing/content/files
        run: |
          mkdir -p ../client/build
          touch ../client/build/sitemap.txt
          npm ci
          npm run build-redirects
          npm run build-canonicals

      - name: Deploy function
        if: ${{ ! vars.SKIP_FUNCTION }}
        run: |-
          set -eo pipefail

          for region in europe-west3; do
            gcloud beta functions deploy mdn-nonprod-test-de-$region \
            --gen2 \
            --runtime=nodejs20 \
            --region=$region \
            --source=cloud-function \
            --trigger-http \
            --allow-unauthenticated \
            --entry-point=mdnHandler \
            --concurrency=100 \
            --min-instances=1 \
            --max-instances=100 \
            --memory=2GB \
            --timeout=120s \
            --set-env-vars="ORIGIN_MAIN=de.test.developer.allizom.org" \
            --set-env-vars="ORIGIN_LIVE_SAMPLES=live.de.test.mdnyalp.dev" \
            --set-env-vars="ORIGIN_PLAY=de.test.mdnyalp.dev" \
            --set-env-vars="SOURCE_CONTENT=https://storage.googleapis.com/${{ vars.GCP_BUCKET_NAME }}/main/" \
            --set-env-vars="SOURCE_API=https://api.developer.allizom.org/" \
            --set-env-vars="SENTRY_DSN=${{ secrets.SENTRY_DSN_CLOUD_FUNCTION }}" \
            --set-env-vars="SENTRY_ENVIRONMENT=test-de" \
            --set-env-vars="SENTRY_TRACES_SAMPLE_RATE=${{ vars.SENTRY_TRACES_SAMPLE_RATE }}" \
            --set-env-vars="SENTRY_RELEASE=${{ github.sha }}" \
            --set-secrets="KEVEL_SITE_ID=projects/${{ secrets.GCP_PROJECT_NAME }}/secrets/stage-kevel-site-id/versions/latest" \
            --set-secrets="KEVEL_NETWORK_ID=projects/${{ secrets.GCP_PROJECT_NAME }}/secrets/stage-kevel-network-id/versions/latest" \
            --set-secrets="SIGN_SECRET=projects/${{ secrets.GCP_PROJECT_NAME }}/secrets/stage-sign-secret/versions/latest" \
            2>&1 | sed "s/^/[$region] /" &
            pids+=($!)
          done

          for pid in "${pids[@]}"; do
            wait $pid
          done

      - name: Invalidate CDN
        if: ${{ github.event.inputs.invalidate }}
        run: gcloud compute url-maps invalidate-cdn-cache ${{ secrets.GCP_LOAD_BALANCER_NAME }} --path "/*" --async
