<%
/*

Retrieves MDN compat data for a given feature

Parameters

$0 – A query string indicating for which feature to retrieve compat data for.
$1 – A depth setting indicating how deep sub features should be added to the table
(flattened, default: 1, first level of sub feature data will be included).

Example calls

{{compat("webextensions.api.alarms")}}
{{compat("webextensions.api.alarms.Alarm")}}
{{compat("webextensions.manifest")}}
{{compat("webextensions.manifest.applications")}}
{{compat("css.properties.background-attachment")}}
{{compat("css.selectors.any-link")}}
{{compat("css.at-rules.font-face")}}
{{compat("http.headers.Cache-Control")}}
{{compat("http.status.404")}}
{{compat("http.method.CONNECT")}}
{{compat("api.WebGL2RenderingContext")}}
{{compat("api.WebGL2RenderingContext.beginQuery")}}
{{compat("html.elements.input")}}

{{compat("html.elements.link", 2)}}
{{compat("webextensions.api.alarms", 3)}}

*/

// Read 'browser-compat' key
const query = $0 || env['browser-compat'];
if (!query) {
  throw new Error("No first query argument or 'browser-compat' front-matter value passed");
}

// Read 'polyfills' key
const polyfill = env['polyfills'];

const depth = $1 || 1;
const queries = Array.isArray(query) ? query : [query];

//output = polyfills;
var output = queries.map(query => `<div class="bc-data" data-query="${query}" data-depth="${depth}" data-multiple="${queries.length > 1}" data-polyfills="${polyfills}">
  If you're able to see this, something went wrong on this page.
</div>`).join("\n");
%>

<%-output%>
