{
  "/en-us/docs/web/http/headers": {
    "url": "/en-US/docs/Web/HTTP/Headers",
    "title": "HTTP headers",
    "locale": "en-US",
    "summary": "HTTP headers let the client and the server pass additional information with an HTTP request or response. An HTTP header consists of its case-insensitive name followed by a colon (:), then by its value.",
    "slug": "Web/HTTP/Headers",
    "modified": "2020-02-10T18:17:01.840Z",
    "tags": [
      "HTTP",
      "HTTP Header",
      "Headers",
      "Networking",
      "Overview",
      "Reference"
    ]
  },
  "/en-us/docs/web/http/headers/accept": {
    "url": "/en-US/docs/Web/HTTP/Headers/Accept",
    "title": "Accept",
    "locale": "en-US",
    "summary": "The Accept request HTTP header advertises which content types, expressed as MIME types, the client is able to understand. Using content negotiation, the server then selects one of the proposals, uses it and informs the client of its choice with the Content-Type response header. Browsers set adequate values for this header depending on the context where the request is done: when fetching a CSS stylesheet a different value is set for the request than when fetching an image, video or a script.",
    "slug": "Web/HTTP/Headers/Accept",
    "modified": "2020-01-10T03:23:22.577Z",
    "tags": ["HTTP", "HTTP Header", "Reference", "Request header"]
  },
  "/en-us/docs/web/http/headers/cache-control": {
    "url": "/en-US/docs/Web/HTTP/Headers/Cache-Control",
    "title": "Cache-Control",
    "locale": "en-US",
    "summary": "The Cache-Control HTTP header holds directives (instructions) for caching in both requests and responses. A given directive in a request does not mean the same directive should be in the response.",
    "slug": "Web/HTTP/Headers/Cache-Control",
    "modified": "2020-02-10T11:02:34.753Z",
    "tags": [
      "Cache-Control",
      "General Header",
      "HTTP",
      "HTTP Header",
      "Reference"
    ]
  },
  "/en-us/docs/web/http/methods": {
    "url": "/en-US/docs/Web/HTTP/Methods",
    "title": "HTTP request methods",
    "locale": "en-US",
    "summary": "HTTP defines a set of request methods to indicate the desired action to be performed for a given resource. Although they can also be nouns, these request methods are sometimes referred to as HTTP verbs. Each of them implements a different semantic, but some common features are shared by a group of them: e.g. a request method can be safe, idempotent, or cacheable.",
    "slug": "Web/HTTP/Methods",
    "modified": "2020-02-01T18:46:58.526Z",
    "tags": ["HTTP", "Methods", "Reference"]
  },
  "/en-us/docs/web/http/methods/get": {
    "url": "/en-US/docs/Web/HTTP/Methods/GET",
    "title": "GET",
    "locale": "en-US",
    "summary": "The HTTP GET method requests a representation of the specified resource. Requests using GET should only retrieve data.",
    "slug": "Web/HTTP/Methods/GET",
    "modified": "2020-01-10T03:22:29.708Z",
    "tags": ["HTTP", "Reference", "Request method"]
  },
  "/en-us/docs/web/http/methods/delete": {
    "url": "/en-US/docs/Web/HTTP/Methods/DELETE",
    "title": "DELETE",
    "locale": "en-US",
    "summary": "The HTTP DELETE request method deletes the specified resource.",
    "slug": "Web/HTTP/Methods/DELETE",
    "modified": "2020-01-10T03:25:44.650Z",
    "tags": ["HTTP", "HTTP method", "Reference", "Request method"]
  },

  "/en-us/docs/web/http/status": {
    "url": "/en-US/docs/Web/HTTP/Status",
    "title": "HTTP response status codes",
    "locale": "en-US",
    "summary": "HTTP response status codes indicate whether a specific HTTP request has been successfully completed. Responses are grouped in five classes: Informational responses (100–199), Successful responses (200–299), Redirects (300–399), Client errors (400–499), and Server errors (500–599).",
    "slug": "Web/HTTP/Status",
    "modified": "2020-01-10T03:06:35.230Z",
    "tags": ["HTTP", "Landing", "Overview", "Reference", "Status code", "Web"]
  },
  "/en-us/docs/web/http/status/200": {
    "url": "/en-US/docs/Web/HTTP/Status/200",
    "title": "200 OK",
    "locale": "en-US",
    "summary": "The HTTP 200 OK success status response code indicates that the request has succeeded. A 200 response is cacheable by default.",
    "slug": "Web/HTTP/Status/200",
    "modified": "2020-01-10T03:22:50.043Z",
    "tags": ["HTTP", "Status code", "Success"]
  },
  "/en-us/docs/web/http/status/201": {
    "url": "/en-US/docs/Web/HTTP/Status/201",
    "title": "201 Created",
    "locale": "en-US",
    "summary": "The HTTP 201 Created success status response code indicates that the request has succeeded and has led to the creation of a resource. The new resource is effectively created before this response is sent back and the new resource is returned in the body of the message, its location being either the URL of the request, or the content of the Location header.",
    "slug": "Web/HTTP/Status/201",
    "modified": "2020-01-10T03:23:19.868Z",
    "tags": ["HTTP", "Reference", "Status code", "Success"]
  },

  "/en-us/docs/web/http/headers/content-security-policy": {
    "url": "/en-US/docs/Web/HTTP/Headers/Content-Security-Policy",
    "title": "Content-Security-Policy",
    "locale": "en-US",
    "summary": "The HTTP Content-Security-Policy response header allows web site administrators to control resources the user agent is allowed to load for a given page. With a few exceptions, policies mostly involve specifying server origins and script endpoints. This helps guard against cross-site scripting attacks (XSS).",
    "slug": "Web/HTTP/Headers/Content-Security-Policy",
    "modified": "2020-01-10T03:12:08.437Z",
    "tags": [
      "CSP",
      "Content Security Policy",
      "HTTP",
      "Reference",
      "Security",
      "header"
    ]
  },
  "/en-us/docs/web/http/headers/content-security-policy/child-src": {
    "url": "/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/child-src",
    "title": "CSP: child-src",
    "locale": "en-US",
    "summary": "The HTTP Content-Security-Policy (CSP) child-src directive defines the valid sources for web workers and nested browsing contexts loaded using elements such as frame and iframe. For workers, non-compliant requests are treated as fatal network errors by the user agent.",
    "slug": "Web/HTTP/Headers/Content-Security-Policy/child-src",
    "modified": "2020-01-31T06:37:26.480Z",
    "tags": [
      "CSP",
      "Child",
      "Content-Security-Policy",
      "Directive",
      "HTTP",
      "Reference",
      "Security",
      "child-src",
      "source"
    ]
  },
  "/en-us/docs/web/http/headers/content-security-policy/connect-src": {
    "url": "/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/connect-src",
    "title": "CSP: connect-src",
    "locale": "en-US",
    "summary": "The HTTP Content-Security-Policy (CSP) connect-src directive restricts the URLs which can be loaded using script interfaces. The APIs that are restricted are:",
    "slug": "Web/HTTP/Headers/Content-Security-Policy/connect-src",
    "modified": "2020-01-10T03:24:23.371Z",
    "tags": [
      "CSP",
      "Content-Security-Policy",
      "Directive",
      "HTTP",
      "Reference",
      "Security",
      "connect-src",
      "source"
    ]
  },
  "/en-us/docs/web/http/cors/errors": {
    "url": "/en-US/docs/Web/HTTP/CORS/Errors",
    "title": "CORS errors",
    "locale": "en-US",
    "summary": "Cross-Origin Resource Sharing (CORS) is a standard that allows a server to relax the same-origin policy. This is used to explicitly allow some cross-origin requests while rejecting others.",
    "slug": "Web/HTTP/CORS/Errors",
    "modified": "2019-03-19T00:32:10.250Z",
    "tags": [
      "CORS",
      "Errors",
      "HTTP",
      "HTTPS",
      "Messages",
      "Same-origin",
      "Security",
      "console",
      "troubleshooting"
    ]
  },
  "/en-us/docs/web/http/cors/errors/corsdidnotsucceed": {
    "url": "/en-US/docs/Web/HTTP/CORS/Errors/CORSDidNotSucceed",
    "title": "Reason: CORS request did not succeed",
    "locale": "en-US",
    "summary": "The HTTP request which makes use of CORS failed because the HTTP connection failed at either the network or protocol level. The error is not directly related to CORS, but is a fundamental network error of some kind.",
    "slug": "Web/HTTP/CORS/Errors/CORSDidNotSucceed",
    "modified": "2019-09-18T07:32:54.888Z",
    "tags": [
      "CORS",
      "CORSDidNotSucceed",
      "Cross-Origin",
      "Error",
      "HTTP",
      "HTTPS",
      "Messages",
      "Reasons",
      "Security",
      "console",
      "troubleshooting"
    ]
  },
  "/en-us/docs/web/http/cors/errors/corsdisabled": {
    "url": "/en-US/docs/Web/HTTP/CORS/Errors/CORSDisabled",
    "title": "Reason: CORS disabled",
    "locale": "en-US",
    "summary": "A request that needs to use CORS was attempted, but CORS is disabled in the user's browser. When this happens, the user needs to turn CORS back on in their browser.",
    "slug": "Web/HTTP/CORS/Errors/CORSDisabled",
    "modified": "2019-03-19T00:30:26.108Z",
    "tags": [
      "Authentication",
      "Authentication Article",
      "CORS",
      "Cross-Origin",
      "Disabled",
      "Errors",
      "HTTP",
      "HTTPS",
      "Messages",
      "Resource",
      "Same Origin",
      "Same-origin",
      "Security",
      "Sharing",
      "Validation",
      "secure",
      "troubleshooting"
    ]
  },
  "/en-us/docs/web/http/headers/permissions-policy": {
    "url": "/en-US/docs/Web/HTTP/Headers/Permissions-Policy",
    "title": "Permissions-Policy",
    "locale": "en-US",
    "summary": "The HTTP Permissions-Policy header provides a mechanism to allow and deny the use of browser features in its own frame, and in content within any iframe elements in the document.",
    "slug": "Web/HTTP/Headers/Permissions-Policy",
    "modified": "2020-01-16T07:19:25.222Z",
    "tags": [
      "Authorization",
      "Experimental",
      "Feature Policy",
      "Permissions-Policy",
      "HTTP",
      "Permissions",
      "Reference",
      "Security",
      "Web",
      "header"
    ]
  },
  "/en-us/docs/web/http/headers/permissions-policy/accelerometer": {
    "url": "/en-US/docs/Web/HTTP/Headers/Permissions-Policy/accelerometer",
    "title": "Permissions-Policy: accelerometer",
    "locale": "en-US",
    "summary": "The HTTP Permissions-Policy header accelerometer directive controls whether the current document is allowed to gather information about the acceleration of the device through the Accelerometer interface.",
    "slug": "Web/HTTP/Headers/Permissions-Policy/accelerometer",
    "modified": "2020-01-10T03:46:36.491Z",
    "tags": [
      "Accelerometer",
      "Directive",
      "Feature Policy",
      "HTTP",
      "Reference"
    ]
  },
  "/en-us/docs/web/http/headers/permissions-policy/ambient-light-sensor": {
    "url": "/en-US/docs/Web/HTTP/Headers/Permissions-Policy/ambient-light-sensor",
    "title": "Permissions-Policy: ambient-light-sensor",
    "locale": "en-US",
    "summary": "The HTTP Permissions-Policy header ambient-light-sensor directive controls whether the current document is allowed to gather information about the amount of light in the environment around the device through the AmbientLightSensor interface.",
    "slug": "Web/HTTP/Headers/Permissions-Policy/ambient-light-sensor",
    "modified": "2020-01-10T03:46:37.902Z",
    "tags": ["Ambient Light Sensor", "Feature Policy", "HTTP"]
  }
}
